(define bigList

) 


(define (list-5 list-nums)
        (if (< (count list-nums) 5) '()
                (list   (item 1 list-nums)
                        (item 2 list-nums)
                        (item 3 list-nums)
                        (item 4 list-nums)
                        (item 5 list-nums))))           
 
 
(define (sum-5 list-num)
  (if (< (length list-num) 5) 1
        (* (list-ref list-num 0)
           (list-ref list-num 1)
           (list-ref list-num 2)
           (list-ref list-num 3)
           (list-ref list-num 4))))
          


(define (find-5-total total next-total list-num)
      (cond    ((< (count list-num) 5) total)
               ((< total next-total) (find-5-total next-total (sum-5 (list-5 (butfirst list-num))) (butfirst list-num)))
               (else (find-5-total total (sum-5 (list-5 (butfirst list-num))) (butfirst list-num)))))                                  
               
(define (main mainList)
(find-5-total 1 (sum-5 (list-5 mainList)) mainList))

(main bigList)





